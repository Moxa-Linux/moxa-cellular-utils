#!/bin/sh
# Busybox udhcpc dispatcher script. Copyright (C) 2009 by Axel Beckert.
#
# Based on the busybox example scripts and the old udhcp source
# package default.* scripts.

RESOLV_CONF="/etc/resolv.conf"

SLOT=@slot@
PKG_CONF_DIR=@conf_dir@
UP_HOOK_DIR=${PKG_CONF_DIR}/ip-up.d
DOWN_HOOK_DIR=${PKG_CONF_DIR}/ip-down.d

run_up_hooks() {
        export IFIDX="${SLOT}"
        export IFNAME="${interface}"
        export IPLOCAL="${ip}"
        export SUBNETMASK="${subnet}"
        export GATEWAY="${router}"
        export DNS_LIST="${dns}"
        run-parts "${UP_HOOK_DIR}"
}
run_down_hooks() {
        export IFIDX="${SLOT}"
        run-parts "${DOWN_HOOK_DIR}"
}

case $1 in
    bound|renew)
	[ -n "${broadcast}" ] && BROADCAST="broadcast ${broadcast}"
	[ -n "${subnet}" ] && NETMASK="/${subnet}"

	/sbin/ip addr flush label ${interface}
	/sbin/ip addr add ${ip}${NETMASK} ${BROADCAST} dev ${interface}

	if [ -n "${mtu}" ]; then
	       /sbin/ip link set dev ${interface} mtu ${mtu}
	fi

	if [ -n "$router" ]; then
	    echo "$0: Resetting default routes"
	    while /sbin/ip route del default; do :; done

	    metric=0
	    for i in $router; do
		/sbin/ip route add default via $i dev $interface metric $metric
		metric=$(($metric + 1))
	    done
	fi

	# Update resolver configuration file
	R=""
	[ -n "$domain" ] && R="domain $domain
"
	for i in $dns; do
	    echo "$0: Adding DNS $i"
	    R="${R}nameserver $i
"
	done

	if [ -x /sbin/resolvconf ]; then
	    echo -n "$R" | resolvconf -a "${interface}.udhcpc"
	else
	    echo -n "$R" > "$RESOLV_CONF"
	fi
	run_up_hooks
	;;

    deconfig)
	if [ -x /sbin/resolvconf ]; then
	    resolvconf -d "${interface}.udhcpc"
	fi
	/sbin/ip addr flush label ${interface}
	run_down_hooks
	;;

    leasefail)
	echo "$0: Lease failed: $message"
	;;

    nak)
	echo "$0: Received a NAK: $message"
	;;

    *)
	echo "$0: Unknown udhcpc command: $1";
	exit 1;
	;;
esac
