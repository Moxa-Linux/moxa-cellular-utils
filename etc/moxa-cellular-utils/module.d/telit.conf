#!/bin/bash
#
#       Copyright (C) MOXA Inc. All rights reserved.
#       Copyright (C) 2016-2017  Aeluin Chen <aeluin.chen@moxa.com>
#
#       This software is distributed under the terms of the
#       MOXA License.  See the file COPYING-MOXA for details.
#

# Telit
# Vendor ID: 1bc7
 
# LE910
_module_1bc7_1201() {
	local module_path=${1}
	local id=${2}
	local module_name="${3}"
	local dev_id=${module_path//\/*\//}

	if $module_path/$dev_id:*.7/ 2>/dev/null ; then
		ALL_MODULE_NAME[${id}]="Telit LE910"
		ALL_QMI_PORT[${id}]=$(ls \
			$module_path/$dev_id:*.2/$SYS_USB/ 2>/dev/null)
		ALL_INTERFACE[${id}]=$(ls \
			$module_path/$dev_id:*.2/$SYS_NET/ 2>/dev/null)
	else
		ALL_MODULE_NAME[${id}]="Telit LE910C1"
		ALL_MODULE_ID[${id}]=${ALL_MODULE_ID[${id}]}_c1
	fi
	ALL_GPS_PORT[${id}]=$(ls \
		$module_path/$dev_id:*.3/ 2>/dev/null | grep tty)
	ALL_AT_PORT[${id}]=$(ls \
		$module_path/$dev_id:*.4/ 2>/dev/null | grep tty)
	ALL_MODEM_PORT[${id}]=$(ls \
		$module_path/$dev_id:*.5/ 2>/dev/null | grep tty)
}

_module_1bc7_initialize() {
	while ! cell_at_cmd "ATE0" 1> /dev/null 2>&1 ; do
		sleep 1
	done
	stty -F ${AT_PORT} -echo raw
}

# LE910

_module_1bc7_1201_initialize() {
	_module_1bc7_initialize
}

_module_1bc7_1201_gps_on() {
	echo -n -e 'AT$GPSNMUN=1,1,0,0,0,0,0\r\n' > ${AT_PORT}
	sleep 1
	echo -n -e 'AT$GPSP=1\r\n' > ${AT_PORT}
}

_module_1bc7_1201_gps_off() {
	echo -n -e 'AT$GPSNMUN=0,1,0,0,0,0,0\r\n' > ${AT_PORT}
}


# LE910C1

_module_1bc7_1201_c1_initialize() {
	_module_1bc7_initialize
}

_module_1bc7_1201_c1_post_start() {
        cell_at_cmd "ATE0" &> /dev/null
}

_module_1bc7_1201_c1_pin_retries() {
	# #PCT: 3
	pin_times=$(cell_at_cmd "AT#PCT" | grep "^#PCT:" | cut -d ' ' -f 2)
	if [ x"${pin_times}" == x"" ]; then
                echo -1
        else
                echo ${pin_times}
        fi

}

_module_1bc7_1201_c1_imsi() {
	local imsi=$(cell_at_cmd 'AT+CIMI' | grep -v -e '^$\|OK')
	echo IMSI: $imsi
}

_module_1bc7_1201_c1_service() {
	# +CGREG: <n>,<stat>[,<lac_tac>,<ci>,<Act>,<rac_mme_code>]
	# <lac_tac>,<ci>,<Act> and <rac_mme_code> are reported only if
	#   <n>=2 and the mobile is registered on some network cell.

	# <stat> - registration status
	#   0 - not registered, terminal is not currently searching a new
	#       operator to register to
	#   1 - registered, home network
	#   2 - not registered, but terminal is currently searching a new
	#       operator to register to
	#   3 - registration denied
	#   4 - unknown
	#   5 - registered, roaming
	# <lac_tac> - location area code (2G, 3G) or tracking area code (4G)
	#             in hexadecimal format (e.g. "00C3" equals 195 in decimal)
	# <ci> - cell ID in hexadecimal format.
	# <AcT>: integer type; access technology of the serving cell
	#   0 - GSM
	#   2 - UTRAN
	#   3 - GSM w/EGPRS
	#   4 - UTRAN w/HSDPA
	#   5 - UTRAN w/HSUPA
	#   6 - UTRAN w/HSDPA and HSUPA
	#   7 - E-UTRAN
	# <rac_mme_code> - string type; one byte routing area code (2G, 3G) or
	#                  Mobile Management Entity code (4G) in hexadecimal
	#                  format.
	# +CGREG: 2,1,"2BC0","3418017",7,01
	local info=""
	local _service=""
	local service=""
	local cellid=""
	local lac=""
	local tac=""


	info="$(cell_at_cmd "AT+CGREG?" | grep "^+CGREG:" | awk '{print $2}')"
	if [ -z "${info}" ]; then
		return 1
	fi

	if [ "$(echo "${info}" | cut -d ',' -f 1)" != "2" ]; then
		cell_at_cmd "AT+CGREG=2" 0.5> /dev/null 2>&1
		[ $? -ne 0 ] && return 1
	fi

	cellid=$(echo "${info}" | cut -d ',' -f 4 | sed -e 's/"//g')
	lac_tac=$(echo "${info}" | cut -d ',' -f 3 | sed -e 's/"//g')
	_service=$(echo "${info}" | cut -d ',' -f 5)
	if [ "${_service}" == "0" ] || [ "${_service}" == "3" ]; then
		service="GSM"
	elif [ "${_service}" == "2" ]; then
		service="UMTS"
	elif [ "${_service}" == "4" ]; then
		service="HSDPA"
	elif [ "${_service}" == "5" ]; then
		service="HSUPA"
	elif [ "${_service}" == "6" ]; then
		service="HSPA"
	elif [ "${_service}" == "7" ]; then
		service="LTE"
	else
		echo "Unknown service: ${_service}"
		return 1
	fi

	echo "Service: ${service}"
	[ "${service}" == "LTE" ] && printf "TAC: " || printf "LAC: "
	printf "${lac_tac}\n"
	echo "CellID: ${cellid}"
}

_module_1bc7_1201_c1_location_info() {
	_module_1bc7_1201_c1_service | grep -v "Service:"
}

_module_1bc7_1201_c1_signal() {
        local service="umts"
	local info=""
	local signal="out of range"

        service=$(_exec_op_rtn service | grep "Service:" | \
                cut -d ' ' -f 2- | awk '{print tolower($0)}')
	info="$(cell_at_cmd "AT#MONI" | grep "^#MONI:" | cut -d' ' -f 2-)"
	signal="$(echo "${info}" | grep -o 'PWR:-[0-9]*dbm' | \
		grep -o -P '(?!.PWR:)-[0-9]*(?!.dbm)')"
	if [ $signal -le -113 ]; then
		echo "signal out of range"
	else
		echo ${service:-umts} ${signal} dbm
	fi
        #_signal_csq2dbm $(at_signal_csq) ${service:-umts}
}

_module_1bc7_1201_c1_signal_adv() {
	# #MONI - Cell Monitor
	#   GSM: include "ARFCN"
	#     * RxQual:<qual> (%)
	#   WCDMA(UMTS/HSPDA/HSUPA/HSPA): include "UARFCN"
	#     * EcIo:<ecio> (dBm)
	#   LTE: include "EARFCN"
	#     * RSRQ:<rsrq> (dBm)
	# * PWR:<dBm>
        local service="umts"
	local info=""
	local rssi="out of range"
	local csq="out of range"
	local rxqual=""
	local ecio=""
	local rsrq=""

        service=$(_exec_op_rtn service | grep "Service:" | \
                cut -d ' ' -f 2- | awk '{print tolower($0)}')
	service=${service:-umts}
	info="$(cell_at_cmd "AT#MONI" | grep "^#MONI:" | cut -d' ' -f 2-)"
	rssi="$(echo "${info}" | grep -o 'PWR:-[0-9]*dbm' | \
		grep -o -P '(?!.PWR:)-[0-9]*(?!.dbm)')"
	if [ $rssi -le -113 ]; then
		rssi="signal out of range"
	else
		rssi="${service} ${rssi} dBm"
	fi

	echo "CSQ: $(at_signal_csq)"
	echo "RSSI: ${rssi}"
	if [ "${service}" == "lte" ]; then
		rsrq="$(echo "${info}" | grep -o 'RSRQ:-[0-9]*' | \
			grep -o -P '(?!.RSRQ:)-[0-9]*')"
		echo "RSRQ: ${service} ${rsrq} dBm"
	elif [ "${service}" == "gsm" ]; then
		rxqual="$(echo "${info}" | grep -o 'RxQual:-[0-9]*' | \
			grep -o -P '(?!.RxQual:)-[0-9]*')"
		echo "RxQual: ${service} ${rxqual} dBm"
	elif [ "${service}" == "umts" ] || [ "${service}" == "hsdpa" ] || \
		[ "${service}" == "hsupa" ] || [ "${service}" == "hspa" ]; then
		ecio="$(echo "${info}" | grep -o 'EcIo-[0-9]*' | \
			grep -o -P '(?!.EcIo:)-[0-9]*')"
		echo "EcIo: ${service} ${ecio} dBm"
	fi
}

_module_1bc7_1201_c1_iccid() {
	local iccid=$(cell_at_cmd 'AT+ICCID' | grep "^+ICCID:" | \
		awk '{print $2}' )
	echo ICC-ID: $iccid
}

_module_1bc7_1201_c1_module_ids() {
	local imei=$(cell_at_cmd 'AT#CGSN=1' | grep "^#CGSN:" | \
		awk '{print $2}' )
        echo IMEI: $imei
}

_module_1bc7_1201_c1_wvdial_template_file() {
        echo ${CONF_DIR}/wvdial/telit-le910c1.conf.template
}
